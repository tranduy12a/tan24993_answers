1.  How  to  join  tables  in  Magento  2?  
	Step1: Set a Collection class
	Step2: Set your own function to get data
	Step3: Get the collection and call to filterOrder function above and Save this class
2.  How  to  filter  by  an  attribute?  Filter  by  a  normal  field  ?  Sort  order  ?  Add  more  attribute  /  fields  to  collection  ? 

	- Filter  by  an  attribute use:  addAttributeToFilter()
	- Filter  by  a  normal  field use: addFieldToFilter()
	- Sort order: 

3.  How  to  get  data  from  request  (get/post)  in  correct  way  in  magento  2  ?  
	- In a case of a controller that extends Magento\Framework\App\Action\Action, it is possible to get the request with the aid of $this->getRequest()->getPost().

	- For a custom class, inject the request in the constructor:
	
	<?php 
	namespace Namespace\Module\Something; 
	class ClassName 
	{ 
		protected $request; 
		public function __construct
		( \Magento\Framework\App\Request\Http $request, 
		....//rest of parameters here 
		) 
		{ 
			$this->request = $request;
		 ...//rest of constructor here 
		} 
		public function getPost() 
		{ 
			return $this->request->getPost(); 
		} 
	}

4.  How  to  validate  form  data  with  JS  (client  side)  and  PHP  (server  side)  in  Magento  2?  

	- step1: create a test form, the form is created as the attribute for validation.
	- step2: accept javascript validation, please run the below script:
		<script type="text/x-magento-init">
		    {
			"#custom-form": {
			    "validation": {}
			}
		    }
		</script>

	or you can make that operation directly in .html like this:
		<form data-mage-init='{"validation": {}}' class="form" id="custom-form" method="post" autocomplete="off">
		or

		<script type="text/javascript">
		require([
		    'jquery',
		    'mage/mage'
		], function($){
		 
		   var dataForm = $('#custom-form');
		   dataForm.mage('validation', {});
		 
		});
		</script>

5.  How  to  initiate  configuration  for  a  component  ?  

	Following step:
	- Create the module directory.
	- Create the required registration.php file
	- Create the module.xml configuration file
	- Create the default.xml layout configuration file
	- Add new block declaration under the “content” container in the default.xml file
	- Create new script.phtml file
	- Add HTML markup with the data-bind attribute and scope name for the UI Component
	- Add UI component configuration via text/x-magento-init script
	- Create new JavaScript part of the UI Component in the component.js file
	- Enable module by running bin/magento module:enable command
	- Install module by running bin/magento setup:upgrade command
6.  What  is  VirtualType  in di.xml? Can  we  use  a  data  provider  class  implementation  instead  of  VirtualType  ? 
	- The virtualYype allows inserting different dependencies into the existing classes but not making any change to other classes. 
	- Yes, we can use a  data  provider  class  implementation  instead  of  VirtualType.
7.  What  is  the  difference  between  custom  EAV  attributes  and  extension  attributes  ?

Custom attributes are the attributes added to describe an entity, such as product attributes, customer attributes etc. These are a subset of EAV attributes.

Extension attributes on the other hand are generally used for more complex data types such as adding additional complex data into an entity from a custom external table.

Simply put, custom attributes conform to EAV standards whereas extension attributes are used for more complex data which custom attributes cannot handle.

8.  How  to  customize  UI  component  template?  

We can use HtmlContent component for adding a custom template to a UI fieldset

9.  How  to  customize  a  JS  component  (any  JS  module  or  component  UI  JS)  ? 
	9.1 Place the custom component source file in one of the following locations:
		- Your theme JS files: <theme_dir>/web/js or <theme_dir>/<VendorName>_<ModuleName>/web/js. In this case the component is available in your theme and its child themes.
		- Your module view JS files: <module_dir>/view/frontend/web/js. In this case the  component is available in all modules and themes (if your module is enabled).
	9.2 Optionally, in the corresponding module or theme, create a requirejs-config.js configuration file, if it does not yet exist there and set path for your resource
